// --> LeetCode <--

class Solution {
public:
    bool isPalindrome(int x) {
        int ans = x;
        long long int rev = 0;

        while(ans > 0)
        {
            int digit = ans%10;
            rev = rev * 10 + digit;
            ans = ans/10;
        }
        if(x == rev)
        return 1;
        return 0;
    }
};




// --> GFG <--

//{ Driver Code Starts
//Initial Template for C++


#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
//User function Template for C++

class Solution
{
	public:
		string is_palindrome(int n)
		{
		    int ans = n;
		    int rev = 0;
		    
		    while(ans != 0)
		    {
		        int digit = ans%10;
		        rev = rev * 10 + digit;
		        ans = ans/10;
		    }
		    
		    if(n == rev)
		    return "Yes";
		    return "No";
		}
};

//{ Driver Code Starts.
int main(){
    int T;
    cin >> T;
    while(T--)
    {
    	int n;
    	cin >> n;
    	Solution ob;
    	string ans = ob.is_palindrome(n);
    	cout << ans <<"\n";
    }
	return 0;
}

// } Driver Code Ends
