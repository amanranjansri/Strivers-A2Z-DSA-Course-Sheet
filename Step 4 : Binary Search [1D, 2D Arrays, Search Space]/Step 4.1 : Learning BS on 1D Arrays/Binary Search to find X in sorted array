//{ Driver Code Starts
// Initial template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
// User function template for C++

class Solution {
  public:
  int solve(int *arr,int n, int target, int s, int e)
    {
        int m = s + (e-s)/2;
        //base case
        if(s>e)
        {
            return -1;
        }

        //recursive call
        for(int i = 0 ; i<n; i++)
        {
            if(arr[m] == target)
            {
                return m;
            }
            if(arr[m] > target)
            {
                return solve(arr, n, target, s, m-1 );
            }
            else
            {
              return  solve(arr, n, target, m+1, e);
            }
        }
        return -1;
    }
    int binarysearch(int arr[], int n, int k) {
        
        int s = 0;
        int e = n-1;
        
        return solve(arr, n, k, s, e);
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;

    while (t--) {
        int N;
        cin >> N;
        int arr[N];
        for (int i = 0; i < N; i++) cin >> arr[i];
        int key;
        cin >> key;
        Solution ob;
        int found = ob.binarysearch(arr, N, key);
        cout << found << endl;
    }
}

// } Driver Code Ends
