#include <bits/stdc++.h> 
/************************************************************

Following is the Binary Tree node class
    
template <typename T = int>
class TreeNode
{
public:
    T data;
    TreeNode<T> *left;
    TreeNode<T> *right;

    TreeNode(T val)
    {
        this->data = val;
        left = NULL;
        right = NULL;
    }

    ~TreeNode()
    {
        if (left != NULL)
        {
            delete left;
        }
        if (right != NULL)
        {
            delete right;
        }
    }
};

************************************************************/

vector<int> zigzagTreeTraversal(TreeNode<int> *root)
{
    //    Write your code here.
    vector<int>ans;
    
    if(root == NULL)
    {
        return ans;
    }
    
    queue<TreeNode<int>*>q;
    q.push(root);
    int f = 1;
    
    while(!q.empty())
    {
        int n = q.size();
        vector<int>temp;

        for(int i = 0; i < n; i++)
        {
            TreeNode<int>* node = q.front();
            q.pop();
            if(node -> left != NULL)
            {
                q.push(node -> left);
            }
            if(node -> right != NULL)
            {
                q.push(node -> right);
            }
            temp.push_back(node -> data);
        }

        if(f%2 == 0)
        {
            reverse(temp.begin(), temp.end());
        }
        for(int i = 0; i < temp.size(); i++)
        {
            ans.push_back(temp[i]);
        }
        f = !f;
    }
    return ans;
}
