//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution{
public:
    int solve(int i, int x, vector<int>arr, int n, int k, vector<vector<int>> &dp)
    {
        //base case
        if(i == n)
        {
            if(x == k)
            {
                return 1;
            }
            else
            {
                return 0;
            }
        }
        
        //step -3
        if(dp[i][x] != -1)
        {
            return dp[i][x];
        }
        
        //recursive call
        
        int ans = 0;
        int include = solve(i+1, x^arr[i], arr, n, k, dp);
        int exclude = solve(i+1, x, arr, n, k, dp);
        
        //step -2
        ans = include + exclude;
        dp[i][x] = ans;
        return dp[i][x];
    }
    int subsetXOR(vector<int> arr, int N, int K) {
        
        //step -1
        vector<vector<int>> dp(N+1, vector<int>(200,-1));
        return solve(0, 0, arr, N, K, dp);
    }
};

//{ Driver Code Starts.
int main() 
{ 
    int t;
    cin>>t;
    while(t--)
    {
        int N;
        cin>>N;
        int K;
        cin>>K;
        vector<int> v;
        for(int i = 0;i<N;i++)
        {
            int x;
            cin>>x;
            v.push_back(x);
        }    
        Solution ob;
        cout << ob.subsetXOR(v,N,K) << endl;
    }
    return 0; 
}
// } Driver Code Ends
